!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Foam	Helium.C	/^namespace Foam$/;"	n	language:C++	file:
Foam	Helium.H	/^namespace Foam$/;"	n	language:C++
Foam::HeliumModels	Helium.C	/^namespace HeliumModels$/;"	n	language:C++	namespace:Foam	file:
Foam::HeliumModels	Helium.H	/^namespace HeliumModels$/;"	n	language:C++	namespace:Foam
Foam::HeliumModels::Helium	Helium.H	/^class Helium$/;"	c	language:C++	namespace:Foam::HeliumModels
Foam::HeliumModels::Helium::Helium	Helium.C	/^Foam::HeliumModels::Helium::Helium$/;"	f	language:C++	class:Foam::HeliumModels::Helium
Foam::HeliumModels::Helium::HeliumCoeffs_	Helium.H	/^        dictionary HeliumCoeffs_;$/;"	m	language:C++	class:Foam::HeliumModels::Helium
Foam::HeliumModels::Helium::T_	Helium.H	/^        const volScalarField& T_;$/;"	m	language:C++	class:Foam::HeliumModels::Helium
Foam::HeliumModels::Helium::calcNu	Helium.C	/^Foam::HeliumModels::Helium::calcNu() $/;"	f	language:C++	class:Foam::HeliumModels::Helium
Foam::HeliumModels::Helium::correct	Helium.C	/^void Foam::HeliumModels::Helium::correct()$/;"	f	language:C++	class:Foam::HeliumModels::Helium
Foam::HeliumModels::Helium::nuMax_	Helium.H	/^        dimensionedScalar nuMax_;$/;"	m	language:C++	class:Foam::HeliumModels::Helium
Foam::HeliumModels::Helium::nuMin_	Helium.H	/^        dimensionedScalar nuMin_;$/;"	m	language:C++	class:Foam::HeliumModels::Helium
Foam::HeliumModels::Helium::override	Helium.H	/^        virtual bool read(const dictionary& HeliumProperties) override;$/;"	m	language:C++	class:Foam::HeliumModels::Helium
Foam::HeliumModels::Helium::override	Helium.H	/^        virtual void correct() override;$/;"	m	language:C++	class:Foam::HeliumModels::Helium
Foam::HeliumModels::Helium::read	Helium.C	/^bool Foam::HeliumModels::Helium::read$/;"	f	language:C++	class:Foam::HeliumModels::Helium
Foam::HeliumModels::Helium::~Helium	Helium.H	/^    virtual ~Helium()$/;"	f	language:C++	class:Foam::HeliumModels::Helium
Helium	Helium.C	/^Foam::HeliumModels::Helium::Helium$/;"	f	language:C++	class:Foam::HeliumModels::Helium
Helium	Helium.H	/^class Helium$/;"	c	language:C++	namespace:Foam::HeliumModels
Helium.C	Helium.C	1;"	F	language:C++
Helium.H	Helium.H	1;"	F	language:C++
HeliumCoeffs_	Helium.H	/^        dictionary HeliumCoeffs_;$/;"	m	language:C++	class:Foam::HeliumModels::Helium
HeliumModels	Helium.C	/^namespace HeliumModels$/;"	n	language:C++	namespace:Foam	file:
HeliumModels	Helium.H	/^namespace HeliumModels$/;"	n	language:C++	namespace:Foam
Helium_H	Helium.H	36;"	d	language:C++
T_	Helium.H	/^        const volScalarField& T_;$/;"	m	language:C++	class:Foam::HeliumModels::Helium
calcNu	Helium.C	/^Foam::HeliumModels::Helium::calcNu() $/;"	f	language:C++	class:Foam::HeliumModels::Helium
correct	Helium.C	/^void Foam::HeliumModels::Helium::correct()$/;"	f	language:C++	class:Foam::HeliumModels::Helium
nuMax_	Helium.H	/^        dimensionedScalar nuMax_;$/;"	m	language:C++	class:Foam::HeliumModels::Helium
nuMin_	Helium.H	/^        dimensionedScalar nuMin_;$/;"	m	language:C++	class:Foam::HeliumModels::Helium
override	Helium.H	/^        virtual bool read(const dictionary& HeliumProperties) override;$/;"	m	language:C++	class:Foam::HeliumModels::Helium
override	Helium.H	/^        virtual void correct() override;$/;"	m	language:C++	class:Foam::HeliumModels::Helium
read	Helium.C	/^bool Foam::HeliumModels::Helium::read$/;"	f	language:C++	class:Foam::HeliumModels::Helium
~Helium	Helium.H	/^    virtual ~Helium()$/;"	f	language:C++	class:Foam::HeliumModels::Helium
