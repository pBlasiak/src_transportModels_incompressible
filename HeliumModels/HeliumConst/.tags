!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Foam	HeliumConst.C	/^namespace Foam$/;"	n	language:C++	file:
Foam	HeliumConst.H	/^namespace Foam$/;"	n	language:C++
Foam::HeliumModels	HeliumConst.C	/^namespace HeliumModels$/;"	n	language:C++	namespace:Foam	file:
Foam::HeliumModels	HeliumConst.H	/^namespace HeliumModels$/;"	n	language:C++	namespace:Foam
Foam::HeliumModels::HeliumConst	HeliumConst.H	/^class HeliumConst$/;"	c	language:C++	namespace:Foam::HeliumModels
Foam::HeliumModels::HeliumConst::HeliumConst	HeliumConst.C	/^Foam::HeliumModels::HeliumConst::HeliumConst$/;"	f	language:C++	class:Foam::HeliumModels::HeliumConst
Foam::HeliumModels::HeliumConst::HeliumConstCoeffs_	HeliumConst.H	/^        dictionary HeliumConstCoeffs_;$/;"	m	language:C++	class:Foam::HeliumModels::HeliumConst
Foam::HeliumModels::HeliumConst::TMean0_	HeliumConst.H	/^		dimensionedScalar TMean0_;$/;"	m	language:C++	class:Foam::HeliumModels::HeliumConst
Foam::HeliumModels::HeliumConst::TMean_	HeliumConst.H	/^		volScalarField TMean_;$/;"	m	language:C++	class:Foam::HeliumModels::HeliumConst
Foam::HeliumModels::HeliumConst::calcNu	HeliumConst.C	/^Foam::HeliumModels::HeliumConst::calcNu() $/;"	f	language:C++	class:Foam::HeliumModels::HeliumConst
Foam::HeliumModels::HeliumConst::correct	HeliumConst.C	/^void Foam::HeliumModels::HeliumConst::correct()$/;"	f	language:C++	class:Foam::HeliumModels::HeliumConst
Foam::HeliumModels::HeliumConst::override	HeliumConst.H	/^        virtual bool read(const dictionary& HeliumProperties) override;$/;"	m	language:C++	class:Foam::HeliumModels::HeliumConst
Foam::HeliumModels::HeliumConst::override	HeliumConst.H	/^        virtual void correct() override;$/;"	m	language:C++	class:Foam::HeliumModels::HeliumConst
Foam::HeliumModels::HeliumConst::read	HeliumConst.C	/^bool Foam::HeliumModels::HeliumConst::read$/;"	f	language:C++	class:Foam::HeliumModels::HeliumConst
Foam::HeliumModels::HeliumConst::~HeliumConst	HeliumConst.H	/^    virtual ~HeliumConst()$/;"	f	language:C++	class:Foam::HeliumModels::HeliumConst
HeliumConst	HeliumConst.C	/^Foam::HeliumModels::HeliumConst::HeliumConst$/;"	f	language:C++	class:Foam::HeliumModels::HeliumConst
HeliumConst	HeliumConst.H	/^class HeliumConst$/;"	c	language:C++	namespace:Foam::HeliumModels
HeliumConst.C	HeliumConst.C	1;"	F	language:C++
HeliumConst.H	HeliumConst.H	1;"	F	language:C++
HeliumConstCoeffs_	HeliumConst.H	/^        dictionary HeliumConstCoeffs_;$/;"	m	language:C++	class:Foam::HeliumModels::HeliumConst
HeliumConst_H	HeliumConst.H	37;"	d	language:C++
HeliumModels	HeliumConst.C	/^namespace HeliumModels$/;"	n	language:C++	namespace:Foam	file:
HeliumModels	HeliumConst.H	/^namespace HeliumModels$/;"	n	language:C++	namespace:Foam
TMean0_	HeliumConst.H	/^		dimensionedScalar TMean0_;$/;"	m	language:C++	class:Foam::HeliumModels::HeliumConst
TMean_	HeliumConst.H	/^		volScalarField TMean_;$/;"	m	language:C++	class:Foam::HeliumModels::HeliumConst
calcNu	HeliumConst.C	/^Foam::HeliumModels::HeliumConst::calcNu() $/;"	f	language:C++	class:Foam::HeliumModels::HeliumConst
correct	HeliumConst.C	/^void Foam::HeliumModels::HeliumConst::correct()$/;"	f	language:C++	class:Foam::HeliumModels::HeliumConst
override	HeliumConst.H	/^        virtual bool read(const dictionary& HeliumProperties) override;$/;"	m	language:C++	class:Foam::HeliumModels::HeliumConst
override	HeliumConst.H	/^        virtual void correct() override;$/;"	m	language:C++	class:Foam::HeliumModels::HeliumConst
read	HeliumConst.C	/^bool Foam::HeliumModels::HeliumConst::read$/;"	f	language:C++	class:Foam::HeliumModels::HeliumConst
~HeliumConst	HeliumConst.H	/^    virtual ~HeliumConst()$/;"	f	language:C++	class:Foam::HeliumModels::HeliumConst
